}
")
## rmeasure
rmeas <- Csnippet(
"cases = rnbinom_mu(tau, rho*incid);
if (cases > 0.0) {
cases = nearbyint(cases);
} else {
cases = 0.0;
}
")
## get parameters
epi_pars <- MODEL1_INPUT_PARAMETERS$adj_pars_epi
end_pars <- MODEL1_INPUT_PARAMETERS$adj_pars_end
## names
if (depts > 1) {
## state names
state_names <- c("S", paste0("S", 1:depts),
"E", paste0("E", 1:depts),
"I", paste0("I", 1:depts),
"A", paste0("A", 1:depts),
"R", paste0("R", 1:depts),
"incid", "incidU", "incidV", "asymV", "newV",
"foival", "Str0", "Sout", "Sin")
## parameter names
param_names <- c("rho", "tau", "beta1", "beta2", "beta3", "beta4", "beta5",
"beta6", "betat", "nu", "gamma", "sigma", "theta0", "alpha", "mu", "delta",
"sig_sq", "S_0","E_0","I_0","A_0","R_0", "pop_0", "kappa",
paste0("S", 1:depts, "_0"),
paste0("E", 1:depts, "_0"),
paste0("I", 1:depts, "_0"),
paste0("A", 1:depts, "_0"),
paste0("R", 1:depts, "_0"))
## append extra params
extra_inits <- rep(0, 5*depts)
epi_pars <- c(unlist(epi_pars), 0, extra_inits)
names(epi_pars) <- param_names
end_pars <- c(unlist(end_pars), 0, extra_inits)
names(end_pars) <- param_names
## accum vars
accum_names <- c("incid","incidU","incidV","asymV","newV",
"foival","Str0","Sout","Sin")
} else {
## state names
state_names <- c("S", "E", "I", "A", "R", "incid", "foival", "Str0", "Sout", "Sin")
## parameter names
param_names <- c("rho", "tau", "beta1", "beta2", "beta3", "beta4", "beta5",
"beta6", "betat", "gamma", "sigma", "theta0", "alpha", "mu", "delta",
"nu", "pop_0", "sig_sq",
"S_0","E_0","I_0","A_0","R_0")
## accum vars
accum_names <- c("incid", "foival","Str0","Sout","Sin")
}
## partrans
param_trans <- pomp::parameter_trans(
log = c("tau", "sigma", "gamma", "mu", "delta", "alpha", "sig_sq"),
logit = c("rho", "nu", "theta0"),
barycentric = c("S_0", "E_0", "I_0", "A_0", "R_0")
)
## build pomp model
model1 <- pomp::pomp(
data = dat,
times = "week",
t0 = 0,
rmeasure = rmeas,
dmeasure = dmeas,
rprocess = pomp::euler(step.fun = rproc, delta.t = 1/7),
covar = pomp::covariate_table(covar, times = "time"),
partrans = param_trans,
statenames = state_names,
paramnames = param_names,
accumvars = accum_names,
rinit = rinit
)
if (period == "endemic") {
model1@t0 <- 232
model1 <- pomp::window(model1, start = 233, end = 430) ## endemic period
pomp::coef(model1) <- unlist(end_pars) ## endemic period
} else {
model1 <- pomp::window(model1, start = 1, end = 232) ## epidemic period
model1@t0 <- 0
pomp::coef(model1) <- unlist(epi_pars) ## epidemic period
}
pomp::coef(model1)['betat'] = 0 #1e-10
#pomp::coef(model1)['rho'] = 7e10
return(model1)
}
mod_1 = haiti1mod()
prof_if[,-c(1,2, 19,27, 28)] %>%
filter(loglik>max(loglik)-20,loglik.se<2) %>%
sapply(range) -> box
# S_0 ??
unfixed_param_names <- c("beta1", "beta2", "beta3", "beta4", "beta5", "beta6",
"nu", "rho", "tau", "E_0", "I_0", "sig_sq")
fixed_params <- coef(mod_1)[c("pop_0","mu", "delta", "sigma", "gamma", "alpha", "theta0", "A_0", "R_0")]
rw_sd1 <- rw.sd(beta1 = .02, beta2 = .02, beta3 = .02,
beta4 = .02, beta5 = .02, beta6 = .02,
tau = 0.02, rho = 0.02, nu = 0.02, sig_sq = 0.02,
E_0 = ivp(0.2), I_0 = ivp(0.2))
freeze(seed=1196696958,
profile_design(
betat=seq(-0.07,0.04,length=50),
lower=box[1,unfixed_param_names],
upper=box[2,unfixed_param_names],
nprof=10, type="runif"
)) -> guesses
library(doParallel)
library(doRNG)
library(parallel)
no_cores <- detectCores(logical=FALSE)
cl<- parallel::makeCluster(no_cores)
# m2 is from the betatrendexplorations file
# needed the topline because of the str of
# mif2 requiring a special kind of object
# cl defined in betatrend exploration.Rmd
doParallel::registerDoParallel(cl)
registerDoRNG(123)
#foreach(guess=iter(guesses,"row"), .combine=rbind) %dopar% {
foreach(i = 1:nrow(guesses), .combine=rbind) %dopar% {
pars = c(unlist(guesses[i,]),fixed_params, S_0 = 1 - guesses[i,"E_0"] - guesses[i,"I_0"])
parOrder = c("rho","tau","beta1","beta2","beta3","beta4","beta5","beta6","nu",
"gamma","sigma","theta0","alpha","mu","delta","sig_sq","S_0","E_0",
"I_0","A_0","R_0","pop_0","betat")
pars = pars[order(factor(names(pars), levels = parOrder))]
mod_1@params = pars
library(pomp)
library(tidyverse)
#mod_1@params = c(unlist(guesses[i,]),fixed_params, S_0 = 1 - guesses[i,"E_0"] - guesses[i,"I_0"])
mod_1 %>%
# problem is with params argument
mif2(
rw.sd=rw_sd1, Nmif=20,cooling.fraction.50=0.5, Np=50) -> mf
# replicate 10 runs of pfilter so we can get se's
replicate(
10,
mf %>% pfilter(Np=50) %>% logLik()) %>%
logmeanexp(se=TRUE) -> ll
mf %>% coef() %>% bind_rows() %>%
bind_cols(loglik=ll[1],loglik.se=ll[2])
}-> results
results
print(system.time())
#foreach(guess=iter(guesses,"row"), .combine=rbind) %dopar% {
system.time(foreach(i = 1:nrow(guesses), .combine=rbind) %dopar% {
pars = c(unlist(guesses[i,]),fixed_params, S_0 = 1 - guesses[i,"E_0"] - guesses[i,"I_0"])
parOrder = c("rho","tau","beta1","beta2","beta3","beta4","beta5","beta6","nu",
"gamma","sigma","theta0","alpha","mu","delta","sig_sq","S_0","E_0",
"I_0","A_0","R_0","pop_0","betat")
pars = pars[order(factor(names(pars), levels = parOrder))]
mod_1@params = pars
library(pomp)
library(tidyverse)
#mod_1@params = c(unlist(guesses[i,]),fixed_params, S_0 = 1 - guesses[i,"E_0"] - guesses[i,"I_0"])
mod_1 %>%
# problem is with params argument
mif2(
rw.sd=rw_sd1, Nmif=20,cooling.fraction.50=0.5, Np=50) -> mf
# replicate 10 runs of pfilter so we can get se's
replicate(
10,
mf %>% pfilter(Np=50) %>% logLik()) %>%
logmeanexp(se=TRUE) -> ll
mf %>% coef() %>% bind_rows() %>%
bind_cols(loglik=ll[1],loglik.se=ll[2])
}-> results)
no_cores <- detectCores(logical=FALSE)
cl<- parallel::makeCluster(no_cores, outfile = "")
# m2 is from the betatrendexplorations file
# needed the topline because of the str of
# mif2 requiring a special kind of object
# cl defined in betatrend exploration.Rmd
doParallel::registerDoParallel(cl)
registerDoRNG(123)
print('starting fitting')
#foreach(guess=iter(guesses,"row"), .combine=rbind) %dopar% {
system.time(foreach(i = 1:nrow(guesses), .combine=rbind) %dopar% {
pars = c(unlist(guesses[i,]),fixed_params, S_0 = 1 - guesses[i,"E_0"] - guesses[i,"I_0"])
parOrder = c("rho","tau","beta1","beta2","beta3","beta4","beta5","beta6","nu",
"gamma","sigma","theta0","alpha","mu","delta","sig_sq","S_0","E_0",
"I_0","A_0","R_0","pop_0","betat")
pars = pars[order(factor(names(pars), levels = parOrder))]
mod_1@params = pars
library(pomp)
library(tidyverse)
#mod_1@params = c(unlist(guesses[i,]),fixed_params, S_0 = 1 - guesses[i,"E_0"] - guesses[i,"I_0"])
print('guess i')
mod_1 %>%
# problem is with params argument
mif2(
rw.sd=rw_sd1, Nmif=100,cooling.fraction.50=0.5, Np=1000) -> mf
# replicate 10 runs of pfilter so we can get se's
print('replicating guess i')
replicate(
10,
mf %>% pfilter(Np=1000) %>% logLik()) %>%
logmeanexp(se=TRUE) -> ll
mf %>% coef() %>% bind_rows() %>%
bind_cols(loglik=ll[1],loglik.se=ll[2])
}-> results)
#foreach(guess=iter(guesses,"row"), .combine=rbind) %dopar% {
system.time(foreach(i = 1:nrow(guesses), .combine=rbind) %dopar% {
pars = c(unlist(guesses[i,]),fixed_params, S_0 = 1 - guesses[i,"E_0"] - guesses[i,"I_0"])
parOrder = c("rho","tau","beta1","beta2","beta3","beta4","beta5","beta6","nu",
"gamma","sigma","theta0","alpha","mu","delta","sig_sq","S_0","E_0",
"I_0","A_0","R_0","pop_0","betat")
pars = pars[order(factor(names(pars), levels = parOrder))]
mod_1@params = pars
library(pomp)
library(tidyverse)
#mod_1@params = c(unlist(guesses[i,]),fixed_params, S_0 = 1 - guesses[i,"E_0"] - guesses[i,"I_0"])
print('guess', i)
mod_1 %>%
# problem is with params argument
mif2(
rw.sd=rw_sd1, Nmif=100,cooling.fraction.50=0.5, Np=1000) -> mf
# replicate 10 runs of pfilter so we can get se's
print('replicating guess', i)
replicate(
10,
mf %>% pfilter(Np=1000) %>% logLik()) %>%
logmeanexp(se=TRUE) -> ll
mf %>% coef() %>% bind_rows() %>%
bind_cols(loglik=ll[1],loglik.se=ll[2])
}-> results)
#foreach(guess=iter(guesses,"row"), .combine=rbind) %dopar% {
system.time(foreach(i = 1:nrow(guesses), .combine=rbind) %dopar% {
pars = c(unlist(guesses[i,]),fixed_params, S_0 = 1 - guesses[i,"E_0"] - guesses[i,"I_0"])
parOrder = c("rho","tau","beta1","beta2","beta3","beta4","beta5","beta6","nu",
"gamma","sigma","theta0","alpha","mu","delta","sig_sq","S_0","E_0",
"I_0","A_0","R_0","pop_0","betat")
pars = pars[order(factor(names(pars), levels = parOrder))]
mod_1@params = pars
library(pomp)
library(tidyverse)
#mod_1@params = c(unlist(guesses[i,]),fixed_params, S_0 = 1 - guesses[i,"E_0"] - guesses[i,"I_0"])
print('guess')
print(i)
mod_1 %>%
# problem is with params argument
mif2(
rw.sd=rw_sd1, Nmif=100,cooling.fraction.50=0.5, Np=1000) -> mf
# replicate 10 runs of pfilter so we can get se's
print('replicating guess')
print(i)
replicate(
10,
mf %>% pfilter(Np=1000) %>% logLik()) %>%
logmeanexp(se=TRUE) -> ll
mf %>% coef() %>% bind_rows() %>%
bind_cols(loglik=ll[1],loglik.se=ll[2])
}-> results)
#foreach(guess=iter(guesses,"row"), .combine=rbind) %dopar% {
system.time(foreach(i = 1:nrow(guesses), .combine=rbind) %dopar% {
pars = c(unlist(guesses[i,]),fixed_params, S_0 = 1 - guesses[i,"E_0"] - guesses[i,"I_0"])
parOrder = c("rho","tau","beta1","beta2","beta3","beta4","beta5","beta6","nu",
"gamma","sigma","theta0","alpha","mu","delta","sig_sq","S_0","E_0",
"I_0","A_0","R_0","pop_0","betat")
pars = pars[order(factor(names(pars), levels = parOrder))]
mod_1@params = pars
library(pomp)
library(tidyverse)
#mod_1@params = c(unlist(guesses[i,]),fixed_params, S_0 = 1 - guesses[i,"E_0"] - guesses[i,"I_0"])
system.time(print('guess'))
print(i)
system.time(mod_1 %>%
# problem is with params argument
mif2(
rw.sd=rw_sd1, Nmif=100,cooling.fraction.50=0.5, Np=1000) -> mf)
# replicate 10 runs of pfilter so we can get se's
print('replicating guess')
print(i)
replicate(
10,
mf %>% pfilter(Np=1000) %>% logLik()) %>%
logmeanexp(se=TRUE) -> ll
mf %>% coef() %>% bind_rows() %>%
bind_cols(loglik=ll[1],loglik.se=ll[2])
}-> results)
guesses
results %>% ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
view(results)
load("~/OneDrive/Documents/UMich/Research/haitiRes/haitiwash/trendResults.rda")
view(results)
results %>% ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
results
results %>% filter(loglik > -1700) ggplot(aes(x = betat, y=loglik)) +
results %>% filter(loglik > -1700) ggplot(aes(x = betat, y=loglik)) +
results %>% filter(loglik > -1700) %>% ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
results %>% filter(loglik > -1700, loglik.se < 2) %>% ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
results %>% filter(loglik > -1700, loglik.se < 1) %>% ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
results %>% filter(loglik > -1700, loglik.se < 2) %>% ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
results
results %>% filter(loglik > -1700, loglik.se < 2) %>% group_by(betat) %>% summarize(max)
results %>% filter(loglik > -1700, loglik.se < 2) %>% group_by(betat) %>% summarize(max())
results %>% filter(loglik > -1700, loglik.se < 2) %>% group_by(betat) %>% summarize(max(loglik))
results %>% filter(loglik > -1700, loglik.se < 2) %>%
group_by(betat) %>%
summarize(loglik=max(loglik)) %>%
ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
results %>% filter(loglik > -1610, loglik.se < 2) %>%
group_by(betat) %>%
summarize(loglik=max(loglik)) %>%
ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
results %>% filter(loglik > -1600, loglik.se < 2) %>%
group_by(betat) %>%
summarize(loglik=max(loglik)) %>%
ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
results %>% filter(loglik > -1620, loglik.se < 2) %>%
group_by(betat) %>%
summarize(loglik=max(loglik)) %>%
ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
results
results %>% filter(loglik > -1620, loglik.se < 2) %>%
group_by(betat) %>%
summarize(loglik=max(loglik)) %>%
ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
results %>% filter(loglik > -1615, loglik.se < 2) %>%
group_by(betat) %>%
summarize(loglik=max(loglik)) %>%
ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
results %>% filter(loglik > -1620, loglik.se < 2) %>%
group_by(betat) %>%
summarize(loglik=max(loglik)) %>%
ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
results %>% filter(loglik > -1620, loglik.se < 1) %>%
group_by(betat) %>%
summarize(loglik=max(loglik)) %>%
ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
results %>% filter(loglik > -1620) %>%
group_by(betat) %>%
summarize(loglik=max(loglik)) %>%
ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
results %>% filter(loglik > -1625) %>%
group_by(betat) %>%
summarize(loglik=max(loglik)) %>%
ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
results %>% filter(loglik > -1625) %>%
group_by(betat) %>%
summarize(loglik=max(loglik)) %>%
ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
results %>% filter(loglik > -1625, loglik.se < 2) %>%
group_by(betat) %>%
summarize(loglik=max(loglik)) %>%
ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
load("~/OneDrive/Documents/UMich/Research/haitiRes/haitiwash/trendResults.rda")
results
results %>% filter(loglik > -1625, loglik.se < 2) %>%
group_by(betat) %>%
summarize(loglik=max(loglik)) %>%
ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
results
results %>% filter((loglik > -1625, loglik.se < 2)) %>%
results %>% filter( %>%
results %>%
group_by(betat) %>%
summarize(loglik=max(loglik)) %>%
ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
results %>%
group_by(betat) %>%
summarize(loglik=max(loglik)) %>%
ggplot(aes(x = betat, y=loglik)) +
geom_point()
results %>%
group_by(betat) %>%
summarize(loglik=max(loglik)) %>%
ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
results %>% filter(loglik.se < 2) %>%
group_by(betat) %>%
summarize(loglik=max(loglik)) %>%
ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
results %>% filter(loglik.se < 1) %>%
group_by(betat) %>%
summarize(loglik=max(loglik)) %>%
ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
results %>% filter(loglik.se < 0.5) %>%
group_by(betat) %>%
summarize(loglik=max(loglik)) %>%
ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
results %>% filter(loglik.se < 0.4) %>%
group_by(betat) %>%
summarize(loglik=max(loglik)) %>%
ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
results %>% filter(loglik.se < 0.5) %>%%>%
results %>% filter(loglik.se < 0.5) %>%
ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
results %>% filter(loglik.se < 0.5) %>%
group_by(betat) %>%
summarize(loglik=max(loglik)) %>%
ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
results %>%
group_by(betat) %>%
summarize(loglik=max(loglik)) %>%
ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
results
results %>%
group_by(betat) %>% filter(loglik.se < 1) %>%
summarize(loglik=max(loglik)) %>%
ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
results %>%
group_by(betat) %>% filter(loglik.se < 2) %>%
summarize(loglik=max(loglik)) %>%
ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
results %>%
group_by(betat) %>% filter(loglik.se < 3) %>%
summarize(loglik=max(loglik)) %>%
ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
results %>%
group_by(betat) %>% filter(loglik.se < 2) %>%
summarize(loglik=max(loglik)) %>%
ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
results %>%
group_by(betat) %>% filter(loglik.se < 1) %>%
summarize(loglik=max(loglik)) %>%
ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
results %>%
group_by(betat) %>% filter(loglik.se < 0) %>%
summarize(loglik=max(loglik)) %>%
ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
results %>%
group_by(betat) %>% filter(loglik.se < 0.5) %>%
summarize(loglik=max(loglik)) %>%
ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
results %>%
group_by(betat) %>% filter(loglik.se < 1) %>%
summarize(loglik=max(loglik)) %>%
ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
results %>%
group_by(betat) %>% filter(loglik.se < 2) %>%
summarize(loglik=max(loglik)) %>%
ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
results %>%
group_by(betat) %>% filter(loglik.se < 3) %>%
summarize(loglik=max(loglik)) %>%
ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
results %>%
group_by(betat) %>% filter(loglik.se < 0.3) %>%
summarize(loglik=max(loglik)) %>%
ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
results %>%
group_by(betat) %>% filter(loglik.se < 0.4) %>%
summarize(loglik=max(loglik)) %>%
ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
results %>%
group_by(betat) %>% filter(loglik.se < 0.5) %>%
summarize(loglik=max(loglik)) %>%
ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
results %>%
group_by(betat) %>% filter(loglik.se < 1) %>%
summarize(loglik=max(loglik)) %>%
ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
results %>%
group_by(betat) %>%
summarize(loglik=max(loglik)) %>%
ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
results %>%
group_by(betat) %>% filter(loglik.se < 2) %>%
summarize(loglik=max(loglik)) %>%
ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
results %>%
group_by(betat) %>% filter(loglik.se < 1) %>%
summarize(loglik=max(loglik)) %>%
ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
results %>%
group_by(betat) %>% filter(loglik.se < 2) %>%
summarize(loglik=max(loglik)) %>%
ggplot(aes(x = betat, y=loglik)) +
geom_point() + geom_smooth()
